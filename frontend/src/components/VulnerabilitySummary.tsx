import React, { useEffect, useState } from 'react';
import { Card, Typography } from 'antd';
import axios from 'axios';
import ReactECharts from 'echarts-for-react';

const { Text } = Typography;

interface VulnerabilitySummaryProps {
    fileHash: string;
}

interface VulnerabilityStatistics {
    HIGH: number;
    MEDIUM: number;
    LOW: number;
}

const API_BASE_URL = process.env.REACT_APP_API_URL;

const VulnerabilitySummary: React.FC<VulnerabilitySummaryProps> = ({ fileHash }) => {
    const [vulnerabilityData, setVulnerabilityData] = useState<VulnerabilityStatistics | null>(null);

    useEffect(() => {
        axios.get(`${API_BASE_URL}/results/${fileHash}/`)
            .then(response => {
                const data = response.data[0]?.result_data?.results || [];
                const statistics = calculateStatistics(data);
                setVulnerabilityData(statistics);
            })
            .catch(error => {
                console.error(error);
            });
    }, [fileHash]);

    const calculateStatistics = (data: any[]): VulnerabilityStatistics => {
        return data.reduce((acc: VulnerabilityStatistics, curr: any) => {
            const severity: keyof VulnerabilityStatistics = curr.issue_severity;
            if (severity in acc) {
                acc[severity]++;
            }
            return acc;
        }, { HIGH: 0, MEDIUM: 0, LOW: 0 });
    };

    if (!vulnerabilityData) {
        return null;
    }


    const option = {
        title: {
            subtext: 'Severity SAST',
            left: 'center'
        },
        tooltip: {
            trigger: 'item'
        },
        legend: {
            orient: 'vertical',
            left: 'left',
        },
        series: [
            {
                label: {
                    fontSize: 10,
                },
                name: 'Severity',
                type: 'pie',
                radius: '40%',
                data: [
                    { value: vulnerabilityData.HIGH, name: 'High' },
                    { value: vulnerabilityData.MEDIUM, name: 'Medium' },
                    { value: vulnerabilityData.LOW, name: 'Low' }
                ],
                emphasis: {
                    itemStyle: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }
        ],
        color: ['#ff4d4f', '#faad14', '#52c41a']
    };


    return (
        <Card style={{ maxWidth: '400px', maxHeight: '400px' }}>
            <ReactECharts option={option} />
        </Card>

    );
};

export default VulnerabilitySummary;
