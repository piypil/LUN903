version: '3.5'
services:
  app-frontend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-frontend-dev
    container_name: lun903-frontend
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - app-lilie-backend
    networks:
      - frontend-network

  app-lilie-backend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-lilie
    container_name: lun903-lilie-backend
    ports:
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - shared-scan:/shared/project_scan
      - shared-uploads:/lilie/uploads/
    depends_on:
      - app-db
    networks:
      - backend-network
      - frontend-network

  app-db:
    env_file:
      - ../lilie/.env
    image: postgres:latest
    container_name: lun903-db
    ports:
     - 5432:5432
    volumes:
      - ../scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - backend-network

  redis:
    image: redis:alpine@sha256:43076a37580453c7d2516cff8e4aa6b5a8af2c86366ff8b8b4bde0b0b1fb0c32
    hostname: redis
    container_name: lun903-redis
    networks:
      - backend-network
  
  worker:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-lilie
    hostname: worker
    entrypoint: celery
    command: -A core worker --loglevel=info
    volumes:
      - ../lilie:/lilie
      - /var/run/docker.sock:/var/run/docker.sock
      - shared-scan:/shared/project_scan
      - shared-uploads:/lilie/uploads/
    links:
      - redis
    depends_on:
      - redis
      - app-lilie-backend
    networks:
      - backend-network
  
  flower:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-lilie
    hostname: flower
    entrypoint: celery
    command: -A core flower
    volumes:
      - ../lilie:/lilie
    links:
      - redis
    depends_on:
      - redis
    ports: 
      - '5555:5555'
    networks:
      - backend-network

volumes:
  shared-scan:
    driver: local
  shared-uploads:
    driver: local
  static_volume:
    driver: local

networks:
  frontend-network:
    name: frontend-network
    driver: bridge
  backend-network:
    name: backend-network
    driver: bridge